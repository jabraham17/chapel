#!/usr/bin/env bash

# This script downloads a third-party script to generate an input dataset for
# this example. (SKIPIF scripts are run before starting any tests).
#
# If something fails along the way (perhaps due to a network outage) we'll
# skip executing the test.

# Skip these tests in the valgrind config (runtime is too long)
if [[ ${CHPL_NIGHTLY_TEST_CONFIG_NAME} == "valgrind" ]]; then
  echo "True"
  exit
fi

if [[ ${CHPL_TEST_VGRND_EXE} == "on" ]]; then
  echo "True"
  exit
fi

# If we've already generated the input dataset no need to regenerate it
if [[ -e measurements.txt ]]; then
  echo "False"
  exit
fi

# Download third party script to create input data
if [[ ! -e create_measurements.py ]]; then
  if ! wget --no-check-certificate https://raw.githubusercontent.com/gunnarmorling/1brc/00a309e5c7e0b99907627014bfce53435e3c4c99/src/main/python/create_measurements.py 2> wget.out ; then
    echo "failed to download create_measurements.py; output:" >&2
    cat wget.out >&2
    echo "True"
    exit
  fi
  sed -i.bak 's:\.\./\.\./\.\./data/weather_stations\.csv:weather_stations\.csv:' create_measurements.py
  sed -i.bak 's:\.\./\.\./\.\./data/measurements\.txt:measurements\.txt:' create_measurements.py
fi

# Download list of weather stations (used by create_measurements.py)
if [[ ! -e weather_stations.csv ]]; then
  if ! wget --no-check-certificate https://raw.githubusercontent.com/gunnarmorling/1brc/00a309e5c7e0b99907627014bfce53435e3c4c99/data/weather_stations.csv > wget.out; then
    echo "failed to download weather_stations.csv; output:" >&2
    cat wget.out >&2
    echo "True"
    exit
  fi
fi

# Create the input dataset
if [[ ! -e measurements.txt ]]; then
  if ! python3 ./create_measurements.py 10_000_000 2> python.out; then
    echo "creating input dataset failed; output:" >&2
    cat python.out >&2
    echo "True"
    exit
  fi
fi

echo "False"
